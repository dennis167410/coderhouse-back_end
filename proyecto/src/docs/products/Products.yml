paths:
  /api/products/:
    get:
      summary: Muestra todos los productos registrados.
      tags: 
        - Products
      responses:
        "200":
          description: Muestra todos los productos registrados en la Base de Datos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Products"
        "500":
          description: Error interno del servidor.

    post:
      summary: Crea un nuevo producto con los datos enviados por el body.
      tags: 
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Products'
      responses:
        "200": Muestra los datos del producto creado.
        "404": Error, clave duplicada.
        "505": Error interno del servidor.

  /api/products/{pid}/:
    get:
      summary: Muestra un producto por id.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: pid es el id del producto en la base de datos.
          schema:
            $type: ObjectId
      responses:
        "200":
          description: Muestra la información del producto.
        "404":
          description: Producto no existe.
        "500":
          description: Error interno del servidor.
    put:
      summary: Actualiza los datos del producto.
      tags: 
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: pid es el id del producto en la base de datos.
          schema:
            $type: ObjectId
      responses:
        "200":
          description: Producto actualizado.
        "400":
          description: El producto no existe, por tal motivo no pudo ser actualizado.
        "500":
          description: Error interno del servidor.

    delete:
      summary: Elimina el producto que pertenece al id.
      tags: 
        - Products 
      parameters:
        - name: pid
          in: path
          required: true
          description: pid es el id del producto en la base de datos.
          schema:
            $type: ObjectId
      responses:
        "200":
          description: Producto eliminado.
        "401":
          description: Usted es cliente PREMIUM, pero NO es el dueño del producto, por tal motivo no puede eliminarlo.
        "404":
          description: El producto no existe.
        "500":
          description: Error interno del servidor.

  /api/products/disponibilidad/{disponibilidad}/:
    get:
      summary: Muestra todos los productos con disponibilidad mayor al valor.
      tags: 
        - Products
      parameters:
        - name: stock
          in: path
          required: true
          description: Stock del producto en la base de datos.
          schema:
            $type: stock
      responses:
        "200":
          description: Muestran los productos con una disponibilidad mayor o igual a la pasada por parámetro.
        "404":
          description: No existen productos para esa disponibilidad.
        "500":
          description: Error interno del servidor.

  /api/products/category/{category}/:
    get:
      summary: Muestra todos los productos que pertenecen a esa categoria.
      tags: 
        - Products
      parameters:
        - name: category
          in: path
          required: true
          description: Categoría del producto en la base de datos.
          schema:
            $type: category
      responses:
        "200":
          description: Muestran los productos de la categoria pasada por parámetro.
        "404":
          description: No existen productos para esa categoria.
        "500":
          description: Error interno del servidor.
  
components:
  schemas:
    Products:
        type: object
        properties:
          _id:
            types: ObjectId
            description: Id generado por mongo para el producto.
          title:
            type: String
            description: Título del producto.
          description: 
            type: String
            description: Descripción del producto.
          code:
            type: String
            description: Código del producto,
          price:
            type: integer
            description: Precio unitario del producto.  
          status: 
            type: Boolean
            description: No me queda claro el atributo.  
          stock:
            type: integer
            description: Stock del producto.  
          category:
            type: String
            description: Categoría del producto. 
          thumbnails:
            type: Array
            description: "Imagenes del producto." 
          owner:
            type: String
            description: Quien registro el producto en la base de datos.
        example:
          owner: ADMIN,
          _id: 65ceb99486869118617b2cf2,
          title: Producto 4,
          description: Producto 4,
          code: code4,
          price: 650,
          status: true,
          stock: 20,
          category: cat1,
          thumbnails: ["img/product4_1.jpg","img/product4_2.jpg"]
          

